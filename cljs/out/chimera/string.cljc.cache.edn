{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name chimera.string, :imports nil, :requires {chimera.core chimera.core}, :uses {not-nil? chimera.core}, :defs {is-null? {:protocol-inline nil, :meta {:file "/Users/kg/Projects/ona/calculon/resources/public/cljs/out/chimera/string.cljc", :line 4, :column 7, :end-line 4, :end-column 15, :arglists (quote ([s])), :doc "Checks if a variable is null"}, :name chimera.string/is-null?, :variadic false, :file "resources/public/cljs/out/chimera/string.cljc", :end-column 15, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Checks if a variable is null"}, is-not-null? {:name chimera.string/is-not-null?, :file "resources/public/cljs/out/chimera/string.cljc", :line 9, :column 1, :end-line 9, :end-column 18, :meta {:file "/Users/kg/Projects/ona/calculon/resources/public/cljs/out/chimera/string.cljc", :line 9, :column 6, :end-line 9, :end-column 18}}, substring? {:protocol-inline nil, :meta {:file "/Users/kg/Projects/ona/calculon/resources/public/cljs/out/chimera/string.cljc", :line 12, :column 16, :end-line 12, :end-column 26, :tag Boolean, :arglists (quote ([substring string & {:keys [case-sensitive?], :or {case-sensitive? true}}])), :doc "True if substring is a substring of string", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(substring string {:keys [case-sensitive?], :or {case-sensitive? true}})], :arglists ([substring string & {:keys [case-sensitive?], :or {case-sensitive? true}}]), :arglists-meta (nil)}}, :name chimera.string/substring?, :variadic true, :file "resources/public/cljs/out/chimera/string.cljc", :end-column 26, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(substring string {:keys [case-sensitive?], :or {case-sensitive? true}})], :arglists ([substring string & {:keys [case-sensitive?], :or {case-sensitive? true}}]), :arglists-meta (nil)}, :method-params [(substring string {:keys [case-sensitive?], :or {case-sensitive? true}})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 12, :ret-tag Boolean, :end-line 12, :max-fixed-arity 2, :tag Boolean, :fn-var true, :arglists ([substring string & {:keys [case-sensitive?], :or {case-sensitive? true}}]), :doc "True if substring is a substring of string"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:case-sensitive?}, :order [:case-sensitive?]}, :doc nil}